version: '3.2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    depends_on:
      - "zookeeper"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9092:9092"
  client-app:
    build:
      context: ./client-app
      dockerfile: Dockerfile
    environment:
      - BACKEND_URL_HTTP=https://localhost:8080/ws-gateway-http
      - BACKEND_URL_WS=wss://localhost:8080/ws-gateway-ws/cable
      - BACKEND_IP=localhost:8080
    command: bash -c "/usr/share/nginx/html/env.sh && envsubst '$${BACKEND_IP}' </etc/nginx/conf.d/nginx.conf> /etc/nginx/conf.d/nginx.conf && nginx -g \"daemon off;\""
  authentication:
    build:
      context: ./authentication
      dockerfile: Dockerfile
    command: bundle exec rails s -e production -p 80 -b '0.0.0.0'
    volumes:
      - ./authentication:/authentication
      - type: tmpfs
        target: /authentication/tmp/pids/
    ports:
      - "3101:80"
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    command: bash -c "bundle exec karafka server --daemon && bundle exec rails s -e production -p 80 -b '0.0.0.0'"
    volumes:
      - ./gateway:/gateway
      - type: tmpfs
        target: /gateway/tmp/pids/
    environment:
      - AUTHENTICATION_URL=http://authentication:80
      - PERFORMER_URL=http://performer:8080
    depends_on:
      - "kafka"
  performer:
    build:
      context: ./performer
      dockerfile: Dockerfile
    restart: always
    environment:
      - GATEWAY_URL=http://gateway:80
    command: ["java",  "-jar", "/app.jar"]
    ports:
      - "3103:8080"
  httpd:
    build:
      context: ./httpd
      dockerfile: Dockerfile
    ports:
      - "8080:443"
  gateway-nginx:
    build:
      context: ./gateway
      dockerfile: Dockerfile.nginx
    depends_on:
      - gateway
    ports:
      - 443:443
    environment:
      - BACKEND_IP=gateway:80
    command: bash -c "envsubst '$${BACKEND_IP}' </etc/nginx/conf.d/nginx.conf> /etc/nginx/conf.d/nginx.conf && nginx -g \"daemon off;\""
    restart: always
networks:
  default:
    driver_opts:
      encrypted: "true"
